import openai
import os
from flask import Flask, request, jsonify

# üîë –í–≤–µ–¥–∏ —Å–≤—ñ–π API-–∫–ª—é—á OpenAI —Ç—É—Ç –∞–±–æ –∑–±–µ—Ä–µ–∂–∏ —É –∑–º—ñ–Ω–Ω—ñ–π —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY", "your-api-key-here")

app = Flask(__name__)

def chat_with_gpt(prompt, model="gpt-3.5-turbo"):
    """–í—ñ–¥–ø—Ä–∞–≤–ª—è—î –∑–∞–ø–∏—Ç —É OpenAI API —Ç–∞ –æ—Ç—Ä–∏–º—É—î –≤—ñ–¥–ø–æ–≤—ñ–¥—å"""
    try:
        response = openai.ChatCompletion.create(
            model=model,
            messages=[{"role": "system", "content": "You are a helpful assistant."},
                      {"role": "user", "content": prompt}]
        )
        return response["choices"][0]["message"]["content"]
    except Exception as e:
        return f"–ü–æ–º–∏–ª–∫–∞: {e}"

@app.route("/chat", methods=["POST"])
def chat():
    """–û—Ç—Ä–∏–º—É—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —Ç–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î —á–µ—Ä–µ–∑ OpenAI API"""
    data = request.get_json()
    user_message = data.get("message", "")
    
    if not user_message:
        return jsonify({"error": "–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–µ –ø–æ–≤–∏–Ω–Ω–æ –±—É—Ç–∏ –ø–æ—Ä–æ–∂–Ω—ñ–º"}), 400
    
    response = chat_with_gpt(user_message)
    return jsonify({"response": response})

if __name__ == "__main__":
    app.run(host="0.0.0.0", port=5000)
